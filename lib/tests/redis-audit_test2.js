// Generated by CoffeeScript 1.7.1
(function() {
  var KEY, RedisAudit, async, audit, should;

  require('mocha');

  should = require('chai').should();

  async = require('async');

  RedisAudit = require("../redis-audit");

  KEY = "test";

  audit = new RedisAudit({
    maxLogLength: 10
  });

  describe("RedisAudit", function() {
    describe("add", function() {
      return it("add multiple and pull backi", function(done) {
        var ids;
        ids = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];
        return async.eachSeries(ids, (function(_this) {
          return function(id, next) {
            return audit.add(KEY, id, '- test', function(err) {
              if (err != null) {
                return next(err);
              }
              return next();
            });
          };
        })(this), (function(_this) {
          return function(err) {
            should.not.exist(err);
            return audit.latest(KEY, 1, function(err, items) {
              if (err != null) {
                return consle.error(err);
              }
              console.dir(items);
              return done();
            });
          };
        })(this));
      });
    });
    return describe("pull", function() {
      it("pull back multiple", function(done) {
        return audit.list(KEY, 0, 20, function(err, items) {
          should.not.exist(err);
          console.dir(items);
          return done();
        });
      });
      it("pull back reversely", function(done) {
        return audit.rlist(KEY, 0, 20, function(err, items) {
          should.not.exist(err);
          console.dir(items);
          return done();
        });
      });
      return it("pull sum count", function(done) {
        return audit.count(KEY, function(err, count) {
          should.not.exist(err);
          console.log("count: " + count);
          return done();
        });
      });
    });
  });

}).call(this);
